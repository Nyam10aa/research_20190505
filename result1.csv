Test loss: 3.2751897771721517
Test accuracy: 0.03794083234838632
-------------------folder , length of x_test, y_test-------------------------
121 151 151 <class 'numpy.ndarray'>
<class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,5
9,0
10,2
11,10
12,10
13,10
14,12
15,7
16,44
17,7
18,44
each floor by number


[0, 41, 0]
[0, 110, 0]
[0, 0, 0]


[0, 41, 0]
[0, 90, 20]
[0, 0, 0]


[88, 1, 22]
[24, 0, 16]
[0, 0, 0]


[94, 11, 16]
[13, 11, 6]
[0, 0, 0]


[95, 36, 0]
[12, 8, 0]
[0, 0, 0]


[104, 37, 0]
[4, 6, 0]
[0, 0, 0]


[120, 31, 0]
[0, 0, 0]
[0, 0, 0]


[140, 11, 0]
[0, 0, 0]
[0, 0, 0]


[123, 28, 0]
[0, 0, 0]
[0, 0, 0]


[124, 27, 0]
[0, 0, 0]
[0, 0, 0]


[138, 13, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]


[151, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0.0, 100.0, 0.0]
[0.0, 99.99999999999999, 0.0]
[0, 0, 0]


[0.0, 100.0, 0.0]
[0.0, 81.81818181818181, 18.18181818181818]
[0, 0, 0]


[79.27927927927927, 0.9009009009009008, 19.819819819819816]
[60.0, 0.0, 40.0]
[0, 0, 0]


[77.68595041322314, 9.090909090909092, 13.223140495867769]
[43.333333333333336, 36.66666666666667, 20.0]
[0, 0, 0]


[72.51908396946564, 27.48091603053435, 0.0]
[60.0, 40.0, 0.0]
[0, 0, 0]


[73.75886524822695, 26.24113475177305, 0.0]
[40.0, 60.0, 0.0]
[0, 0, 0]


[79.47019867549669, 20.52980132450331, 0.0]
[0, 0, 0]
[0, 0, 0]


[92.71523178807946, 7.28476821192053, 0.0]
[0, 0, 0]
[0, 0, 0]


[81.45695364238411, 18.543046357615893, 0.0]
[0, 0, 0]
[0, 0, 0]


[82.11920529801324, 17.880794701986755, 0.0]
[0, 0, 0]
[0, 0, 0]


[91.3907284768212, 8.609271523178808, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[2083, 277, 38]
[53, 225, 42]
[0, 0, 0]
[86.86405337781484, 11.551292743953294, 1.58465387823186]
[16.5625, 70.3125, 13.125]
[nan, nan, nan]
total accuracy
0.8491537895511405
-------------------folder , length of x_test, y_test-------------------------
122 4618 4618 <class 'numpy.ndarray'>
<class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,48
7,95
8,104
9,142
10,80
11,95
12,203
13,335
14,333
15,437
16,824
17,630
18,1292
each floor by number


[0, 25, 0]
[0, 384, 7]
[0, 519, 3683]


[0, 25, 0]
[0, 227, 13]
[0, 576, 3777]


[127, 8, 43]
[107, 4, 47]
[337, 39, 3906]


[129, 28, 28]
[215, 24, 63]
[298, 28, 3805]


[189, 62, 3]
[317, 97, 75]
[179, 39, 3657]


[187, 73, 0]
[399, 378, 142]
[0, 90, 3349]


[248, 81, 0]
[381, 503, 908]
[0, 103, 2394]


[288, 51, 0]
[419, 650, 748]
[0, 158, 2304]


[254, 89, 0]
[287, 625, 715]
[0, 131, 2517]


[237, 106, 0]
[234, 830, 455]
[0, 172, 2584]


[412, 79, 0]
[273, 1415, 68]
[0, 479, 1892]


[652, 125, 0]
[125, 2662, 238]
[0, 393, 423]


[917, 483, 0]
[9, 3209, 0]
[0, 0, 0]


[1077, 579, 0]
[52, 2910, 0]
[0, 0, 0]


[1964, 184, 0]
[216, 2254, 0]
[0, 0, 0]


[3272, 195, 0]
[737, 414, 0]
[0, 0, 0]


[4618, 0, 0]
[0, 0, 0]
[0, 0, 0]


[4618, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0.0, 100.0, 0.0]
[0.0, 98.20971867007673, 1.7902813299232736]
[0.0, 12.351261304140884, 87.64873869585911]


[0.0, 100.0, 0.0]
[0.0, 94.58333333333334, 5.416666666666667]
[0.0, 13.232253618194349, 86.76774638180565]


[71.34831460674157, 4.49438202247191, 24.157303370786515]
[67.72151898734177, 2.531645569620253, 29.746835443037973]
[7.870154133582438, 0.9107893507706679, 91.2190565156469]


[69.72972972972973, 15.135135135135135, 15.135135135135135]
[71.19205298013244, 7.947019867549669, 20.86092715231788]
[7.213749697409828, 0.6778019849915274, 92.10844831759864]


[74.40944881889763, 24.409448818897637, 1.1811023622047243]
[64.82617586912066, 19.836400817995912, 15.337423312883436]
[4.619354838709677, 1.0064516129032257, 94.3741935483871]


[71.92307692307692, 28.076923076923077, 0.0]
[43.41675734494015, 41.1316648531012, 15.451577801958651]
[0.0, 2.6170398371619656, 97.38296016283803]


[75.37993920972644, 24.620060790273556, 0.0]
[21.26116071428571, 28.069196428571427, 50.669642857142854]
[0.0, 4.124949939927913, 95.87505006007208]


[84.95575221238937, 15.044247787610619, 0.0]
[23.059988992845348, 35.77325261419923, 41.166758392955416]
[0.0, 6.417546709991877, 93.58245329000812]


[74.05247813411079, 25.94752186588921, 0.0]
[17.639827904118007, 38.41425937307929, 43.9459127228027]
[0.0, 4.947129909365559, 95.05287009063444]


[69.09620991253644, 30.903790087463555, 0.0]
[15.404871626069783, 54.64121132323898, 29.953917050691246]
[0.0, 6.2409288824383164, 93.75907111756169]


[83.91038696537677, 16.089613034623216, 0.0]
[15.546697038724375, 80.58086560364465, 3.8724373576309796]
[0.0, 20.202446225221426, 79.79755377477858]


[83.91248391248392, 16.08751608751609, 0.0]
[4.132231404958677, 88.0, 7.867768595041323]
[0.0, 48.161764705882355, 51.838235294117645]


[65.5, 34.5, 0.0]
[0.27967681789931637, 99.72032318210069, 0.0]
[0, 0, 0]


[65.03623188405797, 34.96376811594203, 0.0]
[1.7555705604321403, 98.24442943956785, 0.0]
[0, 0, 0]


[91.43389199255121, 8.56610800744879, 0.0]
[8.744939271255062, 91.25506072874494, 0.0]
[0, 0, 0]


[94.37554081338332, 5.624459186616671, 0.0]
[64.03127715030408, 35.968722849695915, 0.0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[19189, 2193, 74]
[3771, 16586, 3479]
[814, 2727, 34291]
[89.43419090231171, 10.220917225950783, 0.34489187173750935]
[15.82060748447726, 69.58382278905857, 14.595569726464172]
[2.1516176781560583, 7.208183548318884, 90.64019877352506]
total accuracy
0.8429093883836196
-------------------folder , length of x_test, y_test-------------------------
123 1214 1214 <class 'numpy.ndarray'>
<class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,6
6,13
7,19
8,40
9,41
10,47
11,71
12,66
13,83
14,52
15,114
16,226
17,305
18,131
each floor by number


[0, 32, 0]
[0, 251, 60]
[0, 11, 860]


[0, 30, 0]
[0, 174, 66]
[0, 6, 938]


[32, 9, 88]
[9, 2, 140]
[0, 0, 934]


[54, 20, 71]
[17, 18, 141]
[0, 21, 872]


[53, 76, 23]
[25, 83, 122]
[0, 4, 828]


[54, 106, 0]
[34, 142, 70]
[12, 40, 756]


[65, 102, 0]
[22, 168, 80]
[0, 69, 708]


[124, 67, 0]
[54, 129, 53]
[6, 65, 716]


[71, 110, 0]
[15, 157, 38]
[0, 83, 740]


[47, 130, 0]
[15, 124, 53]
[1, 110, 734]


[93, 83, 0]
[56, 181, 31]
[2, 113, 655]


[110, 85, 0]
[76, 400, 263]
[1, 110, 169]


[184, 38, 0]
[96, 657, 0]
[5, 234, 0]


[224, 12, 0]
[146, 832, 0]
[0, 0, 0]


[281, 0, 0]
[188, 745, 0]
[0, 0, 0]


[593, 107, 0]
[251, 263, 0]
[0, 0, 0]


[1214, 0, 0]
[0, 0, 0]
[0, 0, 0]


[1214, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0.0, 100.0, 0.0]
[0.0, 80.70739549839229, 19.292604501607716]
[0.0, 1.2629161882893225, 98.73708381171066]


[0.0, 100.0, 0.0]
[0.0, 72.5, 27.5]
[0.0, 0.6355932203389831, 99.36440677966102]


[24.806201550387595, 6.976744186046512, 68.21705426356588]
[5.960264900662252, 1.3245033112582782, 92.71523178807946]
[0.0, 0.0, 100.0]


[37.241379310344826, 13.793103448275863, 48.96551724137931]
[9.659090909090908, 10.227272727272727, 80.11363636363636]
[0.0, 2.3516237402015676, 97.64837625979844]


[34.868421052631575, 50.0, 15.131578947368421]
[10.869565217391305, 36.08695652173913, 53.04347826086957]
[0.0, 0.4807692307692307, 99.51923076923076]


[33.75, 66.25, 0.0]
[13.821138211382115, 57.72357723577236, 28.45528455284553]
[1.4851485148514851, 4.9504950495049505, 93.56435643564356]


[38.92215568862276, 61.07784431137725, 0.0]
[8.148148148148147, 62.22222222222222, 29.629629629629626]
[0.0, 8.880308880308881, 91.11969111969113]


[64.92146596858639, 35.07853403141361, 0.0]
[22.88135593220339, 54.66101694915255, 22.45762711864407]
[0.7623888182973316, 8.259212198221093, 90.97839898348157]


[39.226519337016576, 60.773480662983424, 0.0]
[7.142857142857142, 74.76190476190476, 18.095238095238095]
[0.0, 10.08505467800729, 89.9149453219927]


[26.55367231638418, 73.44632768361582, 0.0]
[7.8125, 64.58333333333334, 27.604166666666668]
[0.1183431952662722, 13.017751479289942, 86.8639053254438]


[52.84090909090909, 47.15909090909091, 0.0]
[20.8955223880597, 67.53731343283582, 11.567164179104477]
[0.2597402597402597, 14.675324675324674, 85.06493506493506]


[56.41025641025641, 43.58974358974359, 0.0]
[10.284167794316645, 54.12719891745603, 35.588633288227335]
[0.35714285714285715, 39.285714285714285, 60.35714285714286]


[82.88288288288288, 17.117117117117115, 0.0]
[12.749003984063744, 87.25099601593625, 0.0]
[2.092050209205021, 97.90794979079497, 0.0]


[94.91525423728814, 5.084745762711865, 0.0]
[14.928425357873211, 85.07157464212679, 0.0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[20.15005359056806, 79.84994640943194, 0.0]
[0, 0, 0]


[84.71428571428571, 15.285714285714286, 0.0]
[48.83268482490273, 51.16731517509728, 0.0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]


[100.0, 0.0, 0.0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[4413, 1007, 182]
[1004, 4326, 1117]
[27, 866, 8910]
[78.77543734380578, 17.97572295608711, 3.2488397001071045]
[15.573134791375834, 67.10097719869707, 17.325888009927098]
[0.2754258900336632, 8.834030398857493, 90.89054371110885]
total accuracy
0.807660626029654
-------------------folder , length of x_test, y_test-------------------------
124 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
125 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
126 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
127 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
128 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
129 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
130 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
131 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
132 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
133 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
134 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
135 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
136 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
137 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
138 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
139 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
-------------------folder , length of x_test, y_test-------------------------
140 0 0 <class 'numpy.ndarray'>
number by successful floor
0,0
1,0
2,0
3,0
4,0
5,0
6,0
7,0
8,0
9,0
10,0
11,0
12,0
13,0
14,0
15,0
16,0
17,0
18,0
each floor by number


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
each floor by percent


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]


[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
total by number and percent
[0, 0, 0]
[0, 0, 0]
[0, 0, 0]
[nan, nan, nan]
[nan, nan, nan]
[nan, nan, nan]
total accuracy
nan
big_dic and big_dic_detailed
{0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 6, 6: 61, 7: 114, 8: 149, 9: 183, 10: 129, 11: 176, 12: 279, 13: 428, 14: 397, 15: 558, 16: 1094, 17: 942, 18: 1467}
{0: {0: [0, 98, 0], 1: [0, 745, 67], 2: [0, 530, 4543], 3: [0, 0, 0], 4: [0, 0, 0]}, 1: {0: [0, 96, 0], 1: [0, 491, 99], 2: [0, 582, 4715], 3: [0, 0, 0], 4: [0, 0, 0]}, 2: {0: [247, 18, 153], 1: [140, 6, 203], 2: [337, 39, 4840], 3: [0, 0, 0], 4: [0, 0, 0]}, 3: {0: [277, 59, 115], 1: [245, 53, 210], 2: [298, 49, 4677], 3: [0, 0, 0], 4: [0, 0, 0]}, 4: {0: [337, 174, 26], 1: [354, 188, 197], 2: [179, 43, 4485], 3: [0, 0, 0], 4: [0, 0, 0]}, 5: {0: [345, 216, 0], 1: [437, 526, 212], 2: [12, 130, 4105], 3: [0, 0, 0], 4: [0, 0, 0]}, 6: {0: [433, 214, 0], 1: [403, 671, 988], 2: [0, 172, 3102], 3: [0, 0, 0], 4: [0, 0, 0]}, 7: {0: [552, 129, 0], 1: [473, 779, 801], 2: [6, 223, 3020], 3: [0, 0, 0], 4: [0, 0, 0]}, 8: {0: [448, 227, 0], 1: [302, 782, 753], 2: [0, 214, 3257], 3: [0, 0, 0], 4: [0, 0, 0]}, 9: {0: [408, 263, 0], 1: [249, 954, 508], 2: [1, 282, 3318], 3: [0, 0, 0], 4: [0, 0, 0]}, 10: {0: [643, 175, 0], 1: [329, 1596, 99], 2: [2, 592, 2547], 3: [0, 0, 0], 4: [0, 0, 0]}, 11: {0: [913, 210, 0], 1: [201, 3062, 501], 2: [1, 503, 592], 3: [0, 0, 0], 4: [0, 0, 0]}, 12: {0: [1252, 521, 0], 1: [105, 3866, 0], 2: [5, 234, 0], 3: [0, 0, 0], 4: [0, 0, 0]}, 13: {0: [1452, 591, 0], 1: [198, 3742, 0], 2: [0, 0, 0], 3: [0, 0, 0], 4: [0, 0, 0]}, 14: {0: [2396, 184, 0], 1: [404, 2999, 0], 2: [0, 0, 0], 3: [0, 0, 0], 4: [0, 0, 0]}, 15: {0: [4016, 302, 0], 1: [988, 677, 0], 2: [0, 0, 0], 3: [0, 0, 0], 4: [0, 0, 0]}, 16: {0: [5983, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [0, 0, 0], 4: [0, 0, 0]}, 17: {0: [5983, 0, 0], 1: [0, 0, 0], 2: [0, 0, 0], 3: [0, 0, 0], 4: [0, 0, 0]}}
